"0","fitted_values = predict$fit"
"0","se_values = predict$se.fit"
"0",""
"0","lower_bound = fitted_values - 1.96 * se_values"
"0","upper_bound = fitted_values + 1.96 * se_values"
"0",""
"0","result = data.frame("
"0","  day_unique = test_data$day_unique,"
"0","  block_unique = test_data$hour_unique,"
"0","  fitted_values = fitted_values,"
"0","  lower_bound = lower_bound,"
"0","  upper_bound = upper_bound,"
"0","  count = test_data$count"
"0",")"
"0",""
"0","p_predict <- ggplot(data = result, aes(x = block_unique, y = fitted_values)) +"
"0","  geom_ribbon(aes(ymin = lower_bound, ymax = upper_bound), "
"0","              fill = ""steelblue"", "
"0","              alpha = 0.3) +"
"0","  geom_line(color = ""steelblue"", size = 1) + "
"0","  labs("
"0","    title = ""Expected Number of Calls by Time of Day"","
"0","    subtitle = ""Confidence Intervals Representing 95% Prediction Bounds"","
"0","    x = ""Time of Day"","
"0","    y = ""Expected Number of Calls"""
"0","  ) +"
"0","  scale_x_continuous("
"0","    breaks = 0:23, "
"0","    labels = c(""12:00 AM"", ""1:00 AM"", ""2:00 AM"", ""3:00 AM"", ""4:00 AM"", "
"0","               ""5:00 AM"", ""6:00 AM"", ""7:00 AM"", ""8:00 AM"", ""9:00 AM"", "
"0","               ""10:00 AM"", ""11:00 AM"", ""12:00 PM"", ""1:00 PM"", ""2:00 PM"", "
"0","               ""3:00 PM"", ""4:00 PM"", ""5:00 PM"", ""6:00 PM"", ""7:00 PM"", "
"0","               ""8:00 PM"", ""9:00 PM"", ""10:00 PM"", ""11:00 PM""),"
"0","    expand = c(0, 0)"
"0","  ) + "
"0","  theme_minimal(base_size = 14) +"
"0","  theme("
"0","    axis.text.x = element_text(angle = 45, hjust = 1, size = 10, color = ""gray30""),"
"0","    plot.title = element_text(face = ""bold"", size = 16, hjust = 0.5, color = ""steelblue""),"
"0","    plot.subtitle = element_text(size = 12, hjust = 0.5, color = ""gray50""),"
"0","    axis.title = element_text(face = ""bold"", size = 12, color = ""gray20""),"
"0","    plot.caption = element_text(size = 10, hjust = 0, color = ""gray50""),"
"0","    panel.grid.major = element_line(color = ""gray90""),"
"0","    panel.grid.minor = element_blank(),"
"0","    panel.background = element_rect(fill = ""white"", color = NA)"
"0","  )"
"0","ggsave(p_predict, filename = here(""docs"", ""figures"", ""prediction_results.png""))"
"2","[38;5;232mSaving 7 x 7 in image[39m"
